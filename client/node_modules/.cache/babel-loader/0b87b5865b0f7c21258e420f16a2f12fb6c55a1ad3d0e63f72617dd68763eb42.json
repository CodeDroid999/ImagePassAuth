{"ast":null,"code":"import assertString from './util/assertString';\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\nexport default function isHash(str, algorithm) {\n  assertString(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}","map":{"version":3,"names":["assertString","lengths","md5","md4","sha1","sha256","sha384","sha512","ripemd128","ripemd160","tiger128","tiger160","tiger192","crc32","crc32b","isHash","str","algorithm","hash","RegExp","concat","test"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isHash.js"],"sourcesContent":["import assertString from './util/assertString';\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\nexport default function isHash(str, algorithm) {\n  assertString(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,IAAIC,OAAO,GAAG;EACZC,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,GAAG;EACXC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE;AACV,CAAC;AACD,eAAe,SAASC,MAAM,CAACC,GAAG,EAAEC,SAAS,EAAE;EAC7CjB,YAAY,CAACgB,GAAG,CAAC;EACjB,IAAIE,IAAI,GAAG,IAAIC,MAAM,CAAC,eAAe,CAACC,MAAM,CAACnB,OAAO,CAACgB,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;EACvE,OAAOC,IAAI,CAACG,IAAI,CAACL,GAAG,CAAC;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}