{"ast":null,"code":"import assertString from './util/assertString';\nvar uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\nexport default function isUUID(str, version) {\n  assertString(str);\n  var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}","map":{"version":3,"names":["assertString","uuid","all","isUUID","str","version","pattern","undefined","includes","test"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isUUID.js"],"sourcesContent":["import assertString from './util/assertString';\nvar uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\nexport default function isUUID(str, version) {\n  assertString(str);\n  var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,IAAIC,IAAI,GAAG;EACT,CAAC,EAAE,kEAAkE;EACrE,CAAC,EAAE,kEAAkE;EACrE,CAAC,EAAE,kEAAkE;EACrE,CAAC,EAAE,wEAAwE;EAC3E,CAAC,EAAE,wEAAwE;EAC3EC,GAAG,EAAE;AACP,CAAC;AACD,eAAe,SAASC,MAAM,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC3CL,YAAY,CAACI,GAAG,CAAC;EACjB,IAAIE,OAAO,GAAGL,IAAI,CAAC,CAAC,CAACM,SAAS,EAAE,IAAI,CAAC,CAACC,QAAQ,CAACH,OAAO,CAAC,GAAGA,OAAO,GAAG,KAAK,CAAC;EAC1E,OAAO,CAAC,CAACC,OAAO,IAAIA,OAAO,CAACG,IAAI,CAACL,GAAG,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}