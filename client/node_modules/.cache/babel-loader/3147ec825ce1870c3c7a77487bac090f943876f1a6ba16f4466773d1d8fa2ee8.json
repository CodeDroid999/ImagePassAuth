{"ast":null,"code":"import assertString from './util/assertString';\nvar macAddress = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddressNoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddressWithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nexport default function isMACAddress(str, options) {\n  assertString(str);\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n  if (options && (options.no_colons || options.no_separators)) {\n    return macAddressNoSeparators.test(str);\n  }\n  return macAddress.test(str) || macAddressWithDots.test(str);\n}","map":{"version":3,"names":["assertString","macAddress","macAddressNoSeparators","macAddressWithDots","isMACAddress","str","options","no_colons","no_separators","test"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isMACAddress.js"],"sourcesContent":["import assertString from './util/assertString';\nvar macAddress = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddressNoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddressWithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nexport default function isMACAddress(str, options) {\n  assertString(str);\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n  if (options && (options.no_colons || options.no_separators)) {\n    return macAddressNoSeparators.test(str);\n  }\n\n  return macAddress.test(str) || macAddressWithDots.test(str);\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,IAAIC,UAAU,GAAG,mEAAmE;AACpF,IAAIC,sBAAsB,GAAG,qBAAqB;AAClD,IAAIC,kBAAkB,GAAG,yCAAyC;AAClE,eAAe,SAASC,YAAY,CAACC,GAAG,EAAEC,OAAO,EAAE;EACjDN,YAAY,CAACK,GAAG,CAAC;EACjB;AACF;AACA;;EAEE,IAAIC,OAAO,KAAKA,OAAO,CAACC,SAAS,IAAID,OAAO,CAACE,aAAa,CAAC,EAAE;IAC3D,OAAON,sBAAsB,CAACO,IAAI,CAACJ,GAAG,CAAC;EACzC;EAEA,OAAOJ,UAAU,CAACQ,IAAI,CAACJ,GAAG,CAAC,IAAIF,kBAAkB,CAACM,IAAI,CAACJ,GAAG,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}