{"ast":null,"code":"import assertString from './util/assertString';\nexport var vatMatchers = {\n  GB: /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,\n  IT: /^(IT)?[0-9]{11}$/,\n  NL: /^(NL)?[0-9]{9}B[0-9]{2}$/\n};\nexport default function isVAT(str, countryCode) {\n  assertString(str);\n  assertString(countryCode);\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode].test(str);\n  }\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}","map":{"version":3,"names":["assertString","vatMatchers","GB","IT","NL","isVAT","str","countryCode","test","Error","concat"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isVAT.js"],"sourcesContent":["import assertString from './util/assertString';\nexport var vatMatchers = {\n  GB: /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,\n  IT: /^(IT)?[0-9]{11}$/,\n  NL: /^(NL)?[0-9]{9}B[0-9]{2}$/\n};\nexport default function isVAT(str, countryCode) {\n  assertString(str);\n  assertString(countryCode);\n\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode].test(str);\n  }\n\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,OAAO,IAAIC,WAAW,GAAG;EACvBC,EAAE,EAAE,uFAAuF;EAC3FC,EAAE,EAAE,kBAAkB;EACtBC,EAAE,EAAE;AACN,CAAC;AACD,eAAe,SAASC,KAAK,CAACC,GAAG,EAAEC,WAAW,EAAE;EAC9CP,YAAY,CAACM,GAAG,CAAC;EACjBN,YAAY,CAACO,WAAW,CAAC;EAEzB,IAAIA,WAAW,IAAIN,WAAW,EAAE;IAC9B,OAAOA,WAAW,CAACM,WAAW,CAAC,CAACC,IAAI,CAACF,GAAG,CAAC;EAC3C;EAEA,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAACC,MAAM,CAACH,WAAW,EAAE,GAAG,CAAC,CAAC;AACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}