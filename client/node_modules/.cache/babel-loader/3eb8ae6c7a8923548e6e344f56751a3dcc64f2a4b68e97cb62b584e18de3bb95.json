{"ast":null,"code":"import assertString from './util/assertString';\nimport { CountryCodes } from './isISO31661Alpha2'; // https://en.wikipedia.org/wiki/ISO_9362\n\nvar isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\nexport default function isBIC(str) {\n  assertString(str); // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n\n  if (!CountryCodes.has(str.slice(4, 6).toUpperCase())) {\n    return false;\n  }\n  return isBICReg.test(str);\n}","map":{"version":3,"names":["assertString","CountryCodes","isBICReg","isBIC","str","has","slice","toUpperCase","test"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isBIC.js"],"sourcesContent":["import assertString from './util/assertString';\nimport { CountryCodes } from './isISO31661Alpha2'; // https://en.wikipedia.org/wiki/ISO_9362\n\nvar isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\nexport default function isBIC(str) {\n  assertString(str); // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n\n  if (!CountryCodes.has(str.slice(4, 6).toUpperCase())) {\n    return false;\n  }\n\n  return isBICReg.test(str);\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,SAASC,YAAY,QAAQ,oBAAoB,CAAC,CAAC;;AAEnD,IAAIC,QAAQ,GAAG,8CAA8C;AAC7D,eAAe,SAASC,KAAK,CAACC,GAAG,EAAE;EACjCJ,YAAY,CAACI,GAAG,CAAC,CAAC,CAAC;EACnB;;EAEA,IAAI,CAACH,YAAY,CAACI,GAAG,CAACD,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE,CAAC,EAAE;IACpD,OAAO,KAAK;EACd;EAEA,OAAOL,QAAQ,CAACM,IAAI,CAACJ,GAAG,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}