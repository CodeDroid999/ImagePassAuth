{"ast":null,"code":"import assertString from './util/assertString';\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\n\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n  return true;\n};\nexport default function isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  assertString(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}","map":{"version":3,"names":["assertString","iso8601","iso8601StrictSeparator","isValidDate","str","ordinalMatch","match","oYear","Number","oDay","map","year","month","day","monthString","concat","slice","dayString","d","Date","getUTCFullYear","getUTCMonth","getUTCDate","isISO8601","options","arguments","length","undefined","check","strictSeparator","test","strict"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isISO8601.js"],"sourcesContent":["import assertString from './util/assertString';\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\n\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nexport default function isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  assertString(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C;AACA;;AAEA,IAAIC,OAAO,GAAG,4RAA4R,CAAC,CAAC;;AAE5S,IAAIC,sBAAsB,GAAG,0RAA0R;AACvT;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAW,CAACC,GAAG,EAAE;EAC1C;EACA;EACA;EACA;EACA,IAAIC,YAAY,GAAGD,GAAG,CAACE,KAAK,CAAC,iCAAiC,CAAC;EAE/D,IAAID,YAAY,EAAE;IAChB,IAAIE,KAAK,GAAGC,MAAM,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC;IACnC,IAAII,IAAI,GAAGD,MAAM,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpC,IAAIE,KAAK,GAAG,CAAC,KAAK,CAAC,IAAIA,KAAK,GAAG,GAAG,KAAK,CAAC,IAAIA,KAAK,GAAG,GAAG,KAAK,CAAC,EAAE,OAAOE,IAAI,IAAI,GAAG;IACjF,OAAOA,IAAI,IAAI,GAAG;EACpB;EAEA,IAAIH,KAAK,GAAGF,GAAG,CAACE,KAAK,CAAC,2BAA2B,CAAC,CAACI,GAAG,CAACF,MAAM,CAAC;EAC9D,IAAIG,IAAI,GAAGL,KAAK,CAAC,CAAC,CAAC;EACnB,IAAIM,KAAK,GAAGN,KAAK,CAAC,CAAC,CAAC;EACpB,IAAIO,GAAG,GAAGP,KAAK,CAAC,CAAC,CAAC;EAClB,IAAIQ,WAAW,GAAGF,KAAK,GAAG,GAAG,CAACG,MAAM,CAACH,KAAK,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGJ,KAAK;EAC7D,IAAIK,SAAS,GAAGJ,GAAG,GAAG,GAAG,CAACE,MAAM,CAACF,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGH,GAAG,CAAC,CAAC;;EAEvD,IAAIK,CAAC,GAAG,IAAIC,IAAI,CAAC,EAAE,CAACJ,MAAM,CAACJ,IAAI,EAAE,GAAG,CAAC,CAACI,MAAM,CAACD,WAAW,IAAI,IAAI,EAAE,GAAG,CAAC,CAACC,MAAM,CAACE,SAAS,IAAI,IAAI,CAAC,CAAC;EAEjG,IAAIL,KAAK,IAAIC,GAAG,EAAE;IAChB,OAAOK,CAAC,CAACE,cAAc,EAAE,KAAKT,IAAI,IAAIO,CAAC,CAACG,WAAW,EAAE,GAAG,CAAC,KAAKT,KAAK,IAAIM,CAAC,CAACI,UAAU,EAAE,KAAKT,GAAG;EAC/F;EAEA,OAAO,IAAI;AACb,CAAC;AAED,eAAe,SAASU,SAAS,CAACnB,GAAG,EAAE;EACrC,IAAIoB,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpFzB,YAAY,CAACI,GAAG,CAAC;EACjB,IAAIwB,KAAK,GAAGJ,OAAO,CAACK,eAAe,GAAG3B,sBAAsB,CAAC4B,IAAI,CAAC1B,GAAG,CAAC,GAAGH,OAAO,CAAC6B,IAAI,CAAC1B,GAAG,CAAC;EAC1F,IAAIwB,KAAK,IAAIJ,OAAO,CAACO,MAAM,EAAE,OAAO5B,WAAW,CAACC,GAAG,CAAC;EACpD,OAAOwB,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}