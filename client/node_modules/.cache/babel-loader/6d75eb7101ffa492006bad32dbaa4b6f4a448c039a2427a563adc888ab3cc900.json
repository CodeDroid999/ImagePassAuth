{"ast":null,"code":"import assertString from './util/assertString';\nimport { decimal } from './alpha';\nvar numericNoSymbols = /^[0-9]+$/;\nexport default function isNumeric(str, options) {\n  assertString(str);\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}","map":{"version":3,"names":["assertString","decimal","numericNoSymbols","isNumeric","str","options","no_symbols","test","RegExp","concat","locale"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isNumeric.js"],"sourcesContent":["import assertString from './util/assertString';\nimport { decimal } from './alpha';\nvar numericNoSymbols = /^[0-9]+$/;\nexport default function isNumeric(str, options) {\n  assertString(str);\n\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,SAASC,OAAO,QAAQ,SAAS;AACjC,IAAIC,gBAAgB,GAAG,UAAU;AACjC,eAAe,SAASC,SAAS,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC9CL,YAAY,CAACI,GAAG,CAAC;EAEjB,IAAIC,OAAO,IAAIA,OAAO,CAACC,UAAU,EAAE;IACjC,OAAOJ,gBAAgB,CAACK,IAAI,CAACH,GAAG,CAAC;EACnC;EAEA,OAAO,IAAII,MAAM,CAAC,gBAAgB,CAACC,MAAM,CAAC,CAACJ,OAAO,IAAI,CAAC,CAAC,EAAEK,MAAM,GAAGT,OAAO,CAACI,OAAO,CAACK,MAAM,CAAC,GAAG,GAAG,EAAE,YAAY,CAAC,CAAC,CAACH,IAAI,CAACH,GAAG,CAAC;AAC5H"},"metadata":{},"sourceType":"module","externalDependencies":[]}