{"ast":null,"code":"import assertString from './util/assertString';\nimport multilineRegexp from './util/multilineRegex';\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\n\nvar semanticVersioningRegex = multilineRegexp(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\nexport default function isSemVer(str) {\n  assertString(str);\n  return semanticVersioningRegex.test(str);\n}","map":{"version":3,"names":["assertString","multilineRegexp","semanticVersioningRegex","isSemVer","str","test"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isSemVer.js"],"sourcesContent":["import assertString from './util/assertString';\nimport multilineRegexp from './util/multilineRegex';\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\n\nvar semanticVersioningRegex = multilineRegexp(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\nexport default function isSemVer(str) {\n  assertString(str);\n  return semanticVersioningRegex.test(str);\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,eAAe,MAAM,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,uBAAuB,GAAGD,eAAe,CAAC,CAAC,gDAAgD,EAAE,yFAAyF,EAAE,0CAA0C,CAAC,EAAE,GAAG,CAAC;AAC7O,eAAe,SAASE,QAAQ,CAACC,GAAG,EAAE;EACpCJ,YAAY,CAACI,GAAG,CAAC;EACjB,OAAOF,uBAAuB,CAACG,IAAI,CAACD,GAAG,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}