{"ast":null,"code":"import assertString from './util/assertString';\nvar imeiRegexWithoutHypens = /^[0-9]{15}$/;\nvar imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\nexport default function isIMEI(str, options) {\n  assertString(str);\n  options = options || {}; // default regex for checking imei is the one without hyphens\n\n  var imeiRegex = imeiRegexWithoutHypens;\n  if (options.allow_hyphens) {\n    imeiRegex = imeiRegexWithHypens;\n  }\n  if (!imeiRegex.test(str)) {\n    return false;\n  }\n  str = str.replace(/-/g, '');\n  var sum = 0,\n    mul = 2,\n    l = 14;\n  for (var i = 0; i < l; i++) {\n    var digit = str.substring(l - i - 1, l - i);\n    var tp = parseInt(digit, 10) * mul;\n    if (tp >= 10) {\n      sum += tp % 10 + 1;\n    } else {\n      sum += tp;\n    }\n    if (mul === 1) {\n      mul += 1;\n    } else {\n      mul -= 1;\n    }\n  }\n  var chk = (10 - sum % 10) % 10;\n  if (chk !== parseInt(str.substring(14, 15), 10)) {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["assertString","imeiRegexWithoutHypens","imeiRegexWithHypens","isIMEI","str","options","imeiRegex","allow_hyphens","test","replace","sum","mul","l","i","digit","substring","tp","parseInt","chk"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isIMEI.js"],"sourcesContent":["import assertString from './util/assertString';\nvar imeiRegexWithoutHypens = /^[0-9]{15}$/;\nvar imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\nexport default function isIMEI(str, options) {\n  assertString(str);\n  options = options || {}; // default regex for checking imei is the one without hyphens\n\n  var imeiRegex = imeiRegexWithoutHypens;\n\n  if (options.allow_hyphens) {\n    imeiRegex = imeiRegexWithHypens;\n  }\n\n  if (!imeiRegex.test(str)) {\n    return false;\n  }\n\n  str = str.replace(/-/g, '');\n  var sum = 0,\n      mul = 2,\n      l = 14;\n\n  for (var i = 0; i < l; i++) {\n    var digit = str.substring(l - i - 1, l - i);\n    var tp = parseInt(digit, 10) * mul;\n\n    if (tp >= 10) {\n      sum += tp % 10 + 1;\n    } else {\n      sum += tp;\n    }\n\n    if (mul === 1) {\n      mul += 1;\n    } else {\n      mul -= 1;\n    }\n  }\n\n  var chk = (10 - sum % 10) % 10;\n\n  if (chk !== parseInt(str.substring(14, 15), 10)) {\n    return false;\n  }\n\n  return true;\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,IAAIC,sBAAsB,GAAG,aAAa;AAC1C,IAAIC,mBAAmB,GAAG,2BAA2B;AACrD,eAAe,SAASC,MAAM,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC3CL,YAAY,CAACI,GAAG,CAAC;EACjBC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEzB,IAAIC,SAAS,GAAGL,sBAAsB;EAEtC,IAAII,OAAO,CAACE,aAAa,EAAE;IACzBD,SAAS,GAAGJ,mBAAmB;EACjC;EAEA,IAAI,CAACI,SAAS,CAACE,IAAI,CAACJ,GAAG,CAAC,EAAE;IACxB,OAAO,KAAK;EACd;EAEAA,GAAG,GAAGA,GAAG,CAACK,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAC3B,IAAIC,GAAG,GAAG,CAAC;IACPC,GAAG,GAAG,CAAC;IACPC,CAAC,GAAG,EAAE;EAEV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;IAC1B,IAAIC,KAAK,GAAGV,GAAG,CAACW,SAAS,CAACH,CAAC,GAAGC,CAAC,GAAG,CAAC,EAAED,CAAC,GAAGC,CAAC,CAAC;IAC3C,IAAIG,EAAE,GAAGC,QAAQ,CAACH,KAAK,EAAE,EAAE,CAAC,GAAGH,GAAG;IAElC,IAAIK,EAAE,IAAI,EAAE,EAAE;MACZN,GAAG,IAAIM,EAAE,GAAG,EAAE,GAAG,CAAC;IACpB,CAAC,MAAM;MACLN,GAAG,IAAIM,EAAE;IACX;IAEA,IAAIL,GAAG,KAAK,CAAC,EAAE;MACbA,GAAG,IAAI,CAAC;IACV,CAAC,MAAM;MACLA,GAAG,IAAI,CAAC;IACV;EACF;EAEA,IAAIO,GAAG,GAAG,CAAC,EAAE,GAAGR,GAAG,GAAG,EAAE,IAAI,EAAE;EAE9B,IAAIQ,GAAG,KAAKD,QAAQ,CAACb,GAAG,CAACW,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;IAC/C,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}