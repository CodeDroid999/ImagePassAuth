{"ast":null,"code":"import assertString from './util/assertString';\nvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar isbn13Maybe = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\nexport default function isISBN(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  assertString(str);\n  version = String(version);\n  if (!version) {\n    return isISBN(str, 10) || isISBN(str, 13);\n  }\n  var sanitized = str.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n  var i;\n  if (version === '10') {\n    if (!isbn10Maybe.test(sanitized)) {\n      return false;\n    }\n    for (i = 0; i < 9; i++) {\n      checksum += (i + 1) * sanitized.charAt(i);\n    }\n    if (sanitized.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitized.charAt(9);\n    }\n    if (checksum % 11 === 0) {\n      return !!sanitized;\n    }\n  } else if (version === '13') {\n    if (!isbn13Maybe.test(sanitized)) {\n      return false;\n    }\n    for (i = 0; i < 12; i++) {\n      checksum += factor[i % 2] * sanitized.charAt(i);\n    }\n    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return !!sanitized;\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["assertString","isbn10Maybe","isbn13Maybe","factor","isISBN","str","version","arguments","length","undefined","String","sanitized","replace","checksum","i","test","charAt"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isISBN.js"],"sourcesContent":["import assertString from './util/assertString';\nvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar isbn13Maybe = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\nexport default function isISBN(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  assertString(str);\n  version = String(version);\n\n  if (!version) {\n    return isISBN(str, 10) || isISBN(str, 13);\n  }\n\n  var sanitized = str.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n  var i;\n\n  if (version === '10') {\n    if (!isbn10Maybe.test(sanitized)) {\n      return false;\n    }\n\n    for (i = 0; i < 9; i++) {\n      checksum += (i + 1) * sanitized.charAt(i);\n    }\n\n    if (sanitized.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitized.charAt(9);\n    }\n\n    if (checksum % 11 === 0) {\n      return !!sanitized;\n    }\n  } else if (version === '13') {\n    if (!isbn13Maybe.test(sanitized)) {\n      return false;\n    }\n\n    for (i = 0; i < 12; i++) {\n      checksum += factor[i % 2] * sanitized.charAt(i);\n    }\n\n    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return !!sanitized;\n    }\n  }\n\n  return false;\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,IAAIC,WAAW,GAAG,2BAA2B;AAC7C,IAAIC,WAAW,GAAG,iBAAiB;AACnC,IAAIC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnB,eAAe,SAASC,MAAM,CAACC,GAAG,EAAE;EAClC,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACpFP,YAAY,CAACK,GAAG,CAAC;EACjBC,OAAO,GAAGI,MAAM,CAACJ,OAAO,CAAC;EAEzB,IAAI,CAACA,OAAO,EAAE;IACZ,OAAOF,MAAM,CAACC,GAAG,EAAE,EAAE,CAAC,IAAID,MAAM,CAACC,GAAG,EAAE,EAAE,CAAC;EAC3C;EAEA,IAAIM,SAAS,GAAGN,GAAG,CAACO,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;EAC1C,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,CAAC;EAEL,IAAIR,OAAO,KAAK,IAAI,EAAE;IACpB,IAAI,CAACL,WAAW,CAACc,IAAI,CAACJ,SAAS,CAAC,EAAE;MAChC,OAAO,KAAK;IACd;IAEA,KAAKG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACtBD,QAAQ,IAAI,CAACC,CAAC,GAAG,CAAC,IAAIH,SAAS,CAACK,MAAM,CAACF,CAAC,CAAC;IAC3C;IAEA,IAAIH,SAAS,CAACK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC/BH,QAAQ,IAAI,EAAE,GAAG,EAAE;IACrB,CAAC,MAAM;MACLA,QAAQ,IAAI,EAAE,GAAGF,SAAS,CAACK,MAAM,CAAC,CAAC,CAAC;IACtC;IAEA,IAAIH,QAAQ,GAAG,EAAE,KAAK,CAAC,EAAE;MACvB,OAAO,CAAC,CAACF,SAAS;IACpB;EACF,CAAC,MAAM,IAAIL,OAAO,KAAK,IAAI,EAAE;IAC3B,IAAI,CAACJ,WAAW,CAACa,IAAI,CAACJ,SAAS,CAAC,EAAE;MAChC,OAAO,KAAK;IACd;IAEA,KAAKG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACvBD,QAAQ,IAAIV,MAAM,CAACW,CAAC,GAAG,CAAC,CAAC,GAAGH,SAAS,CAACK,MAAM,CAACF,CAAC,CAAC;IACjD;IAEA,IAAIH,SAAS,CAACK,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAGH,QAAQ,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE;MAC1D,OAAO,CAAC,CAACF,SAAS;IACpB;EACF;EAEA,OAAO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}