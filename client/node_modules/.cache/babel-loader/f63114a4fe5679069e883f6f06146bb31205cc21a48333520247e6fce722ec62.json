{"ast":null,"code":"import merge from './util/merge';\nimport assertString from './util/assertString';\nimport includes from './util/includes';\nimport { decimal } from './alpha';\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\nexport default function isDecimal(str, options) {\n  assertString(str);\n  options = merge(options, default_decimal_options);\n  if (options.locale in decimal) {\n    return !includes(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}","map":{"version":3,"names":["merge","assertString","includes","decimal","decimalRegExp","options","regExp","RegExp","concat","locale","decimal_digits","force_decimal","default_decimal_options","blacklist","isDecimal","str","replace","test","Error"],"sources":["C:/Users/hp/Pictures/ImagePassAuth/client/node_modules/validator/es/lib/isDecimal.js"],"sourcesContent":["import merge from './util/merge';\nimport assertString from './util/assertString';\nimport includes from './util/includes';\nimport { decimal } from './alpha';\n\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\n\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\nexport default function isDecimal(str, options) {\n  assertString(str);\n  options = merge(options, default_decimal_options);\n\n  if (options.locale in decimal) {\n    return !includes(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,OAAO,QAAQ,SAAS;AAEjC,SAASC,aAAa,CAACC,OAAO,EAAE;EAC9B,IAAIC,MAAM,GAAG,IAAIC,MAAM,CAAC,oBAAoB,CAACC,MAAM,CAACL,OAAO,CAACE,OAAO,CAACI,MAAM,CAAC,EAAE,QAAQ,CAAC,CAACD,MAAM,CAACH,OAAO,CAACK,cAAc,EAAE,IAAI,CAAC,CAACF,MAAM,CAACH,OAAO,CAACM,aAAa,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1K,OAAOL,MAAM;AACf;AAEA,IAAIM,uBAAuB,GAAG;EAC5BD,aAAa,EAAE,KAAK;EACpBD,cAAc,EAAE,IAAI;EACpBD,MAAM,EAAE;AACV,CAAC;AACD,IAAII,SAAS,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AAC9B,eAAe,SAASC,SAAS,CAACC,GAAG,EAAEV,OAAO,EAAE;EAC9CJ,YAAY,CAACc,GAAG,CAAC;EACjBV,OAAO,GAAGL,KAAK,CAACK,OAAO,EAAEO,uBAAuB,CAAC;EAEjD,IAAIP,OAAO,CAACI,MAAM,IAAIN,OAAO,EAAE;IAC7B,OAAO,CAACD,QAAQ,CAACW,SAAS,EAAEE,GAAG,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAIZ,aAAa,CAACC,OAAO,CAAC,CAACY,IAAI,CAACF,GAAG,CAAC;EACxF;EAEA,MAAM,IAAIG,KAAK,CAAC,kBAAkB,CAACV,MAAM,CAACH,OAAO,CAACI,MAAM,EAAE,GAAG,CAAC,CAAC;AACjE"},"metadata":{},"sourceType":"module","externalDependencies":[]}